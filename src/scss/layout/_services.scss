@use 'base/variables' as v;
@use 'base/mixins' as m;

.service-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); // Ajusta el tamaño mínimo y máximo de las columnas
    gap: 1rem; // Espacio entre los elementos del grid
    padding: 1rem; // Padding alrededor del grid

    @include m.tablet {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); // Ajusta el tamaño mínimo y máximo de las columnas para tablet
    }

    .service {
        background-color: v.$black;
        padding: 3rem;
        border-radius: 1rem;
        transition: transform;
        transition-duration: 300ms;
        text-align: center;

        &.selected {
            background-color: v.$creme;
            p {
                color: v.$black;
            }
        }

        &:hover {
            transform: scale(1.05);
            cursor: pointer;
        }

        p {
            color: v.$white;
            margin: 0 0 calc(v.$spacing / 4) 0;
            -webkit-touch-callout: none;    /* iOS Safari */
            -webkit-user-select: none;      /* Safari */
            -khtml-user-select: none;       /* Konqueror HTML */
            -moz-user-select: none;         /* Old versions of Firefox */
            -ms-user-select: none;          /* Internet Explorer/Edge */
            user-select: none;              /* Non-prefixed version, currently supported by Chrome, Edge, Opera and Firefox */
        }
        
        .service-price {
            color: v.$creme;
            font-weight: v.$bold;
            font-size: 3rem;
        }
    }

}